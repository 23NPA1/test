students = {
    64: {'name': 'Дэнчик', 'age': 13, 'gender': 'транс'},
    52: {'name': 'Кольчик', 'age': 10, 'gender': 'мэн'},
    99: {'name': 'Витёёёк', 'age': 78, 'gender': 'женщина'}
    }

#def add(number, infa):
    #new_stud = {number: {infa}}
    #add_stud = students.update(new_stud)
    #return students
def add(student_id, info):
    students[student_id] = info
    return students


def change(students, number, info):
    if number in students:
        students[number].update({info})
    return students
    

def view(students):
    if students:  # Проверяем, есть ли студенты в словаре
        print("Список студентов:")
        for student_id, info in students.items():
            print(f"ID: {student_id}, Имя: {info['name']}, Возраст: {info['age']}, Пол: {info['gender']}")
    else:
        print("Список студентов пуст.")
    



new_student_info = {'name': 'Иван', 'age': 20, 'gender': 'женоподобный упырь'}
add(69, new_student_info)  
print(students)















#Задача: Создание системы учета студентов

#Описание задачи: Создайте программу, которая будет использовать словари для учета информации о студентах в классе. Ваша программа должна позволить добавлять новых студентов, изменять информацию о существующих студентах и отображать список всех студентов с их данными.

#Условия:
#Каждый студент будет представлен словарем, содержащим следующие ключи:

#"Имя" (строка)
#"Возраст" (целое число)
#"Пол" (строка)
#Создайте основной словарь students, в котором ключом будет уникальный идентификатор студента (например, номер студента), а значением - словарь с информацией о студенте. Занеси в него 3 студентов (чтобы наполнить словарь students данными)

#Реализуйте функции для следующих операций:

#Добавление нового студента в класс.
#Изменение информации о существующем студенте.
#Отображение всех студентов и их информации.
#Пример работы программы:
#Добавить студента с идентификатором 69, именем "Иван", возрастом 20 и полом"Женоподобный упырь".
#Изменить возраст студента с идентификатором 69 на его новый возраст 21. (Обрати внимание, что твоя функция должна не только уметь изменять возраст студента по идентификатору, но также и изменить и имя студента или все вместе за один раз и имя и пол и возраст)
#Отобразить всех студентов, чтобы увидеть список с их данными.

#Это сильно проще чем холодос, тут работа только со словарями, чекай как добавлять элементы в словарь, как апдейтить их (w3schools или чатгпт), как получать и тд и тп, это пригодится в задаче